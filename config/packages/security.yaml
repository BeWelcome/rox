security:
    enable_authenticator_manager: true
    password_hashers:
        legacy:
            id: 'App\Security\PasswordHasher\LegacyPasswordHasher'

        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: 'auto'
            migrate_from:
                - legacy

        # Stronger password cost for privileged members.
        harsh:
            algorithm: 'auto'
            cost: 14

    providers:
        members:
            entity:
                class: App\Entity\Member

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # disables authentication for api doc
        api-doc:
            pattern: ^/api(?:/index.(html|json|jsonld))?$
            security: false

        api:
            pattern: ^/api
            stateless: true
            user_checker: rox.user_checker
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            logout:
                path: /api/logout
                delete_cookies: ['bewelcome']
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            remember_me:
                secret: '%env(APP_SECRET)%'
                lifetime: 31536000 # 1 year in seconds
                samesite: lax
                path: /
                token_provider:
                    doctrine: true

            user_checker: rox.user_checker

            form_login:
                login_path: security_login
                check_path: security_check
                default_target_path: /
                use_referer: true
                enable_csrf: true

            logout:
                path:   /logout
                target: /

#            access_denied_handler: App\Security\AccessDeniedHandler

    access_control:
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles:  PUBLIC_ACCESS }
        - { path: ^/about, roles:  PUBLIC_ACCESS }
        - { path: ^/donate, roles:  PUBLIC_ACCESS }
        - { path: ^/donation, roles:  PUBLIC_ACCESS }
        - { path: ^/feedback, roles:  PUBLIC_ACCESS }
        - { path: ^/impressum, roles:  PUBLIC_ACCESS }
        - { path: ^/terms, roles:  PUBLIC_ACCESS }
        - { path: ^/privacy, roles:  PUBLIC_ACCESS }
        - { path: ^/datarights, roles:  PUBLIC_ACCESS }
        - { path: ^/stats, roles:  PUBLIC_ACCESS }
        - { path: ^/safety, roles: PUBLIC_ACCESS }
        - { path: ^/media, roles: PUBLIC_ACCESS }
        - { path: ^/press-information, roles: PUBLIC_ACCESS }
        - { path: ^/signup, roles: PUBLIC_ACCESS }
        - { path: ^/suggest, roles: PUBLIC_ACCESS }
        - { path: ^/newsletter, roles: PUBLIC_ACCESS }
        - { path: ^/unsubscribe, roles: PUBLIC_ACCESS }
        - { path: ^/faq, roles: PUBLIC_ACCESS }
        - { path: ^/bod, roles: PUBLIC_ACCESS }
        - { path: ^/bv, roles: PUBLIC_ACCESS }
        - { path: ^/resetpassword, roles: PUBLIC_ACCESS }
        - { path: ^/rox/in, roles: PUBLIC_ACCESS }
        - { path: ^/search/locations/places, roles: PUBLIC_ACCESS }
        - { path: ^/search/locations/all, roles: PUBLIC_ACCESS }
        - { path: ^/search/map, roles: PUBLIC_ACCESS }
        - { path: ^/volunteer, roles: PUBLIC_ACCESS }
        - { path: ^/communitynews, roles: PUBLIC_ACCESS }
        - { path: ^/members/avatar/, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: ROLE_USER }

#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: ROLE_ADMIN
