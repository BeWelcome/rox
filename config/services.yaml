# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  router.request_context.host: 'www.bewelcome.org'
  router.request_context.scheme: 'https'
  new_members_messages_per_hour: "%env(new_members_messages_per_hour)%"
  new_members_messages_per_day: "%env(new_members_messages_per_day)%"
  new_members_requests_per_hour: "%env(new_members_requests_per_hour)%"
  new_members_requests_per_day: "%env(new_members_requests_per_day)%"
  data_directory: "%kernel.project_dir%/data"
  group_directory: "%kernel.project_dir%/%env(group_directory)%"
  gallery_directory: "%kernel.project_dir%/%env(gallery_directory)%"
  upload_directory: "%kernel.project_dir%/%env(upload_directory)%"
  massmail_batch_size: "%env(massmail_batch_size)%"
  forum_notification_batch_size: "%env(forum_notification_batch_size)%"

services:
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Twig,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']


  translation.loader.db:
    public: true
    class: App\TranslationLoader\DatabaseLoader
    arguments: ['@doctrine.orm.entity_manager']
    tags:
      - { name: translation.loader, alias: db}

  app.locale_listener:
    public: true
    class: App\EventListener\LocaleListener
    arguments: ['@doctrine.orm.entity_manager', '%kernel.default_locale%']
    tags:
      - { name: kernel.event_subscriber }

  app.user_locale_listener:
    public: true
    class: App\EventListener\UserLocaleListener
    arguments: ['@session', '@doctrine.orm.entity_manager']
    tags:
      - { name: kernel.event_subscriber }

  app.userprovider:
    public: true
    class: App\Provider\UserProvider
    arguments: ['@doctrine.orm.entity_manager']

  #    rox.legacy_dispatch_listener:
  #        class: App\EventListener\LegacyDispatchListener
  #        arguments: ['@rox.legacy_kernel', '@session', '@security.token_storage' ]
  #        tags:
  #            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 200000 }

  rox.legacy_kernel:
    class: App\LegacyKernel\LegacyHttpKernel
    public: true
    arguments: ['@twig', '@event_dispatcher', '@controller_resolver', '@request_stack', '@argument_resolver', '@service_container']

  rox.legacy_password_encoder:
    public: true
    class: App\Encoder\LegacyPasswordEncoder

  rox.legacy_loader:
    public: true
    class: App\Routing\LegacyLoader
    tags:
      - { name: routing.loader }

  rox.legacy_controller:
    public: true
    class: App\Controller\LegacyController
    calls:
      - [setContainer, ['@service_container']]

  rox.twig_extension:
    public: true
    class: App\Twig\Extension
    arguments:
      $dataDirectory: '%data_directory%'
    tags:
      - { name: 'twig.extension' }

  rox.member_twig_extension:
    class: App\Twig\MemberTwigExtension
    public: true
    arguments: ['@session', '@router', '@security.helper']
    tags:
      - { name: twig.extension }

  pagerfanta.bootstrap4.ajax.template:
    public: true
    class: App\Pagerfanta\TwitterBootstrap4AjaxTemplate

  pagerfanta.bootstrap4.ajax.view:
    public: true
    class: Pagerfanta\View\DefaultView
    arguments:
      - "@pagerfanta.bootstrap4.ajax.template"
      - "@translator"
    tags: [{ name: pagerfanta.view, alias: twitter_bootstrap4_ajax_translated }]

  rox.logger:
    class: App\Logger\Logger
    arguments: ['@doctrine.orm.entity_manager', '@security.helper']

  rox.datacollector_translator:
    public: true
    class: Symfony\Component\Translation\DataCollectorTranslator
    decorates: translator
    arguments: ['@rox.datacollector_translator.inner']

  rox.user_checker:
    public: true
    class: App\Security\UserChecker
    autowire: true

  rox.default.pagerfanta:
    class: Pagerfanta\View\OptionableView
    arguments:
      - '@pagerfanta.view.twitter_bootstrap4'
      - { proximity: 2, prev_message: '«', next_message: '»' , css_container_class: 'pagination float-right'}
    public: false
    tags: [{ name: pagerfanta.view, alias: rox_default }]

#  doctrine.filter.configurator:
#    public: true
#    class: App\Doctrine\Filter\Configurator
#    arguments:
#      - "@doctrine.orm.entity_manager"
#      - "@request_stack"
#      - "@annotation_reader"
#    tags:
#      - { name: kernel.event_listener, event: kernel.request }

  rox.wiki.model:
    public: true
    class: App\Model\WikiModel
    arguments:
      - "@doctrine.orm.entity_manager"

  \HTMLPurifier:
    alias: rox.html_purifier

  rox.html_purifier:
    class: App\Utilities\CustomHTMLPurifier
    tags:
      - name: exercise.html_purifier
        profile: custom

  rox.words_extractor:
    class: App\Utilities\WordsExtractor
    tags: [{ name: translation.extractor, alias: words }]

#  rox.activator:
#    class: App\Activator\RoleActivator
#    arguments: ["@security.helper"]

  Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
    arguments:
      - !service { class: PDO, factory: ['@database_connection', 'getWrappedConnection'] }
      - { lock_mode: LOCK_NONE }

  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.

