#!/bin/bash


# User modifiable variables:
RECIPIENT="bw-admin-discussion@bewelcome.org"
FILESYSTEMS="/ /home /var"
FREESPACE_THRESHOLD=60

# Define the alert function:
free_space_and_alert()
{
  echo "sdfsdf"
  if [ -f /tmp/.freespace_lockfile ];
  then
    MESSAGE="$MESSAGE - logrotation in progress"
  else
    touch /tmp/.freespace_lockfile

    ## find old files in those dirs:
    for dir in /tmp /var/tmp ; do
    if [ -d $dir ]; then
        find $dir  -type f -atime +10 -mtime +10 -exec rm -f '{}' ';' >& /dev/null
    fi ; done

    ## TODO:
    ## More disk-cleaning stuff can be added here ...

    UTILIZED=$(/bin/df -k $FS | /usr/bin/tail -1 | /usr/bin/awk '{print $5}'| cut -f 1 -d '%')
    MESSAGE="$MESSAGE - logrotation completed - now $UTILIZED% full"
    rm /tmp/.freespace_lockfile
  fi
  echo $MESSAGE | /usr/bin/mailx -s "$SUBJECT" "$RECIPIENT"
}


delete_some() {
    ## this perl expression will avoid deleting the first and the last
    ## file, and delete some random files between.
    cd $1
    ls -t . | perl -0e '$_=<>; @files=split(/\n/); pop(@files); shift(@files); for $file (@files) { unlink($file) unless (int(rand(3))); }'
}

HOSTNAME=$(/bin/hostname | /usr/bin/tr '[a-z]' '[A-Z]')

for FS in $FILESYSTEMS
do
  if mount | grep -q " $FS " ; then
    
      UTILIZED=$(/bin/df -k $FS | /usr/bin/tail -1 | /usr/bin/awk '{print $5}'| cut -f 1 -d '%')
      SUBJECT="Filesystem $FS on $HOSTNAME is $UTILIZED% full!"
      MESSAGE="$SUBJECT Threshold is $FREESPACE_THRESHOLD%."

      # Compare the utilized value against the threshold:
      if [[ "$UTILIZED" -gt "$FREESPACE_THRESHOLD" || "$UTILIZED" = "100" ]]; then
          free_space_and_alert      
      fi
  fi    
done

exit 0
