{% extends 'base.html.twig' %}
{% set statistics = {
    'members': {
        'headline': 'members',
        'route': 'stats_members'
    },
    'sent_messages': {
        'headline': 'sent_messages',
        'route': 'stats_messages_sent',
    },
    'read_messages': {
        'headline': 'read_messages',
        'route': 'stats_messages_read'
    },
    'sent_requests': {
        'headline': 'sent_requests',
        'route': 'stats_requests_sent',
    },
    'accepted_requests': {
        'headline': 'accepted_requests',
        'route': 'stats_requests_accepted',
    },
    'created_legs': {
        'headline': 'statistics.legs.created',
        'route': 'stats_legs_created',
    },
    'sent_invitations': {
        'headline': 'statistics.invitations.sent',
        'route': 'stats_invitations_sent',
    },
    'accepted_invitations': {
        'headline': 'statistics.invitations.accepted',
        'route': 'stats_invitations_accepted',
    }
} %}

{% block title %}
    {{ 'statistics.title' | trans }}
{% endblock %}

{% block stylesheets %}
  {{ encore_entry_link_tags('tailwind') }}
{% endblock stylesheets %}

{% block javascripts %}
    {{ encore_entry_script_tags('chartjs') }}
    <script type="application/javascript">
        document.addEventListener("DOMContentLoaded", async function() {
            function createLineChart(data, key, period) {
                let ctx = document.getElementById(key + "-" + period).getContext('2d');
                let barChartData = {
                    labels: data.labels,
                    datasets: [{
                        label: 'Data',
                        backgroundColor: '#999',
                        borderColor: '#888',
                        pointRadius: .5,
                        data: data.numbers
                    }]
                };
                new Chart(ctx, {
                    type: 'line',
                    data: barChartData,
                    options: {
                        title: {
                            display: false,
                        },
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            }

            function createLanguageChart(data) {
                let labels = [];
                let counts = [];
                let i = 0;
                Object.keys(data).forEach(
                    function (key) {
                        labels[i] = key;
                        counts[i] = data[key];
                        i++;
                    }
                );
                let ctx = document.getElementById('languages').getContext('2d');
                let barChartData = {
                    labels: labels,
                    datasets: [{
                        label: 'Languages',
                        backgroundColor: ["#BCE02E", "#E0642E", "#E0D62E", "#2E97E0", "#B02EE0", "#E02E75", "#5CE02E", "#E0B02E", "#FF3179", "#374AF9"],
                        data: counts
                    }]
                };
                new Chart(ctx, {
                    type: 'bar',
                    data: barChartData,
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: false,
                            },
                            legend: {
                                display: false,
                                position: 'bottom'
                            }
                        }
                    }
                });
            }

            function createPieChart(data, canvas) {
                let labels = [];
                let counts = [];
                let i = 0;
                Object.keys(data).forEach(
                    function (key) {
                        labels[i] = key;
                        counts[i] = data[key];
                        i++;
                    }
                );
                let ctx = document.getElementById(canvas).getContext('2d');
                let pieChartData = {
                    labels: labels,
                    datasets: [{
                        label: 'Data',
                        backgroundColor: ["#BCE02E", "#E0642E", "#E0D62E", "#2E97E0", "#B02EE0", "#E02E75", "#5CE02E", "#E0B02E", "#FF3179", "#374AF9",
                            "#E105A7", "#58A29E", "#4ADB83", "#916184", "#0EB109"],
                        data: counts
                    }]
                };
                new Chart(ctx, {
                    type: 'pie',
                    data: pieChartData,
                    options: {
                        responsive: true,
                        title: {
                            display: false,
                        },
                        legend: {
                            display: true,
                            position: 'bottom'
                        }
                    }
                });
            }

            {% for key,current in statistics %}
            await fetch('{{ url(current.route, {'period': 'weekly'}) }}')
                .then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }

                    return response.json();
                })
                .then((data) => {
                    createLineChart(data, '{{ key }}', 'weekly');
                });
            await fetch('{{ url(current.route, {'period': 'daily'}) }}')
                .then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }

                    return response.json();
                })
                .then((data) => {
                    createLineChart(data, '{{ key }}', 'daily');
                });
            {% endfor %}
            await fetch('/stats/members/logins')
                .then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }

                    return response.json();
                })
                .then((data) => {
                    createPieChart(data, 'logins');
                });
            await fetch('/stats/members/countries')
                .then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }

                    return response.json();
                })
                .then((data) => {
                    createPieChart(data, 'countries');
                });
            await fetch('/stats/languages/spoken')
                .then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }

                    return response.json();
                })
                .then((data) => {
                    createLanguageChart(data);
                });
            await fetch('/stats/languages/preferred')
                .then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }

                    return response.json();
                })
                .then((data) => {
                    createPieChart(data, 'preferred');
                });
        });
    </script>
{% endblock javascripts %}

{% block content %}
    <div class="o-text">
        <h1>{{ 'bw statistics'|trans }}</h1>
        <p>{{ 'statshead' | trans }}</p>
        <div class="u-grid u-grid-cols-1 md:u-grid-cols-2 u-gap-16">
            {% for key,current in statistics %}
                <div class="u-col-span-1 md:u-col-span-2 u-mt-16">
                    <h3><i class="fa fa-signal u-mr-8"></i>{{ current.headline|trans }}</h3>
                </div>
                <div class="o-card">
                    <h3>{{ 'statsheadcol1'|trans }}</h3>
                    <canvas id="{{ key }}-weekly"></canvas>
                </div>
                <div class="o-card">
                    <h3>{{ 'statsheadcol2'|trans }}</h3>
                    <canvas id="{{ key }}-daily"></canvas>
                </div>
                {% if key == "members" %}
                <div class="u-col-span-1 md:u-col-span-2 u-mt-16">
                    {{ 'statistics.members.info'|trans }}
                </div>
                {% endif %}
            {% endfor %}
            <div class="o-card">
                <h3>{{ 'statslastlogin'|trans }}</h3>
                <canvas id="logins" width="100" height="130"></canvas>
            </div>
            <div class="o-card">
                <h3>{{ 'statsmembercountry'|trans }}</h3>
                <canvas id="countries" width="100" height="130"></canvas>
            </div>
            <div class="o-card">
                <h3>{{ 'statslanguages'|trans }}</h3>
                <canvas id="languages" width="100" height="130"></canvas>
            </div>
            <div class="o-card">
                <h3>{{ 'statspreferredlanguages'|trans }}</h3>
                <canvas id="preferred" width="100" height="130"></canvas>
            </div>
        </div>
    </div>
{% endblock content %}
