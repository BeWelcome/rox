{% extends 'base.html.twig' %}
{% import 'macros.twig' as macros %}

{% block javascripts %}
    {{ encore_entry_script_tags('bsfileselect') }}
    <script type="text/javascript">
        const imageType = /image.*/
        const maxSize = {{ constraints.size * 1024 * 1024 }};
        const imageProgressTemplate = document.getElementById("image-progress");
        const imageSizeErrorTemplate = document.getElementById("image-size-error");
        const imageTypeErrorTemplate = document.getElementById("image-type-error");
        const progressBars = document.getElementById("progressbars");

        const upload = document.getElementById("upload");
        const abort = document.getElementById("abort");
        upload.addEventListener("click", uploadFiles);
        abort.addEventListener("click", uploadAbort);

        let clients = [];

        function uploadFiles() {
            if (progressBars.children.length !== 0) {
                progressBars.replaceChildren();
            }
            let files = document.getElementById("form_files").files;

            upload.disabled = true;
            abort.disabled = false;

            for (let index = 0; index < files.length; index++) {
                const file = files[index];

                let template;
                if (!file.type.match(imageType)) {
                    template = getFileTypeError(index, file);
                } else if (file.size > maxSize) {
                    template = getFileSizeErrorImage(index, file);
                } else {
                    template = getImageProgressUpload(index, file);
                }

                template.classList.remove('d-none');

                progressBars.append(template);

                const filename = document.getElementById('filename-' + index);
                if (null === filename) {
                    continue;
                }

                filename.innerText = file.name;

                uploadFile(index, file);
            }

            progressBars.classList.remove('d-none');

            return false;
        }

        function uploadFile(index, file) {
            let formData = new FormData();
            let client = new XMLHttpRequest();
            const album = document.getElementById('gallery_upload_form_albums').value;
            clients.push(client);

            formData.append('file', file);
            formData.append('album', album);

            client.onerror = function(e) {
                alert("{{ 'gallery.upload.error'|trans }}");
            };

            client.onload = function(e) {
                const imageProgress = document.getElementById('image-progress-' + index);
                imageProgress.children[1].remove();

                const infoDiv = document.createElement('div');
                infoDiv.classList.add('u-p-8');
                let response = JSON.parse(client.responseText);
                if (response.success) {
                    infoDiv.innerText = response.filename + " - {{ 'gallery.upload.successful'|trans }}";
                } else {
                    infoDiv.innerText = response.filename + " - " + response.error;
                }
                imageProgress.append(infoDiv);
                clients = clients.filter((value)=>value!==client);
                if (clients.length === 0) {
                    let form = document.querySelector('form');
                    form.reset()
                    upload.disabled = false;
                    abort.disabled = true;
                }
            };

            client.upload.onprogress = function(e) {
                let p = Math.round(100 / e.total * e.loaded);
                const percent = document.getElementById('percent-' + index);
                percent.style.width = p + "%";
                percent.setAttribute('aria-value-now', p);

                const filename = document.getElementById('filename-' + index);
                filename.innerText = file.name + " - " + p + "%";
                console.log(file.name, percent, filename, " - " + p);
            };

            client.onabort = function(e) {
                clients = clients.filter((value)=>value!==client);
            };

            client.open("POST", "{{ path('gallery_upload_new') }}");
            client.send(formData);
        }

        function uploadAbort() {
            for(let index = 0; index < clients.length; index++) {
                document.getElementById('image-progress-' + index).remove();
                clients[index].abort();
            }
            alert("{{ 'upload.canceled'|trans }}");

            let form = document.querySelector('form');
            form.reset()
            upload.disabled = false;
            abort.disabled = true;

            return false;
        }

        function getFileTypeError(index, file) {
            const imageTypeError = imageTypeErrorTemplate.cloneNode(true);
            imageTypeError.id = 'image-progress-' + index;
            const error = imageTypeError.children[1];
            error.innerText = file.name + " - {{ 'gallery.upload.type.error'|trans }}";

            return imageTypeError;
        }

        function getFileSizeErrorImage(index, file) {
            const imageSizeError = imageSizeErrorTemplate.cloneNode(true);
            imageSizeError.id = 'image-progress-' + index;
            const error = imageSizeError.children[1];
            error.innerText = file.name + " - {{ 'gallery.upload.size.error'|trans }}";

            setImage(imageSizeError, index, file);
            return imageSizeError;
        }

        function getImageProgressUpload(index, file) {
            const imageProgress = imageProgressTemplate.cloneNode(true);
            imageProgress.id = 'image-progress-' + index;
            const flex = imageProgress.children[1];
            const progress = flex.children[0];
            progress.id = 'progress-' + index;
            progress.children[0].id = 'percent-' + index;
            flex.children[1].id = 'filename-' + index;

            setImage(imageProgress, index, file);
            return imageProgress;
        }

        function setImage(element, index, file) {
            const image = element.children[0];
            const objectUrl = window.URL.createObjectURL(file);
            image.firstChild.src = objectUrl;
        }
    </script>
{% endblock javascripts %}

{% block stylesheets %}
{% endblock stylesheets %}

{% block content %}
   <div class="row no-gutters">
       <div class="col-12"><h1><span class="d-none d-md-block">{{ 'gallery' | trans }} - </span>{{ 'upload' | trans }}</h1>
       <p class="u-mb-8">{{ 'gallery.upload.abstract'|trans({'size': constraints.size})}}</p></div>
       {{ form_start(form, {'attr': {'class': 'col-12'}}) }}
       {{ form_row(form.albums) }}
       <div class="custom-file col-12 u-mb-8">
           <input type="file" class="custom-file-input" multiple="multiple" id="form_files" data-browse="{{ 'browsefile'|trans }}">
           <label class="custom-file-label custom-file-label-fix" id="form_files_label" for="form_files">{{ 'choosefile'|trans }}</label>
       </div>

       <button id="upload" class="btn btn-primary u-mb-8 u-mr-8" type="button">{{ 'upload'|trans }}</button>
       <button id="abort" class="btn btn-danger u-mb-8" type="button" disabled="disabled" onclick="uploadAbort()">{{ 'abort'|trans }}</button>

       <div id="image-progress" class="d-none u-flex u-items-center">
           <div><img src="" style="width: 100px; object-fit: fill; padding:8px;"></div>
           <div class="u-flex u-flex-col u-w-full">
               <div class="progress u-w-full">
                   <div class="progress-bar u-h-16" role="progressbar" style="width: 0;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
               </div>
               <small class="justify-content-center white d-flex position-absolute w-100">{filename}</small>
           </div>
       </div>

       <div id="image-size-error" class="d-none u-flex u-flex-row u-items-center">
           <div><img src="" style="max-height:100px; min-height: 40px; width: 100px; object-fit: fill; padding:8px;"></div>
           <div class="alert-danger u-rounded-4 u-p-8"></div>
       </div>

       <div id="image-type-error" class="d-none u-flex u-flex-row u-items-center">
           <div style="height: 60px; width: 100px; padding:8px;"></div>
           <div class="alert-danger u-rounded-4 u-p-8"></div>
       </div>

       <div id="progressbars"></div>

       {% do form.files.setRendered %}
       {% do form.upload.setRendered %}
       {% do form.abort.setRendered %}
       {{ form_end(form) }}
    </div>
{% endblock content %}
