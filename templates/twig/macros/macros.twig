{% macro input(name, placeholder, value, type) %}
    <input class="form-control" type="{{ type|default('text') }}" name="{{ name }}" placeholder="{{ placeholder|trans }}"
           value="{{ value|e }}" />
{% endmacro %}

{% macro submit(text, class = false) %}
    <button class="form-control btn btn-primary{%  if class %}{{ class }}{% endif %}" type="submit">{{ text|trans }}</button>
{% endmacro %}

{% macro select(name, values, value, class) %}
    {# Source: https://github.com/joomla/jissues/blob/master/templates/fields.twig #}
    <select name="{{ name }}" {% if class %} class="{{ class }}"{% endif %}>
        {% for key, name in values %}
            <option value="{{ key }}"{% if value == key %} selected="selected"{% endif %}>{{ name }}</option>
        {% endfor %}
    </select>
{% endmacro %}

{% macro select2(name, class, placeholder, values, value, allowClear, noSearchBox, width) %}
    <select name="{{ name }}" class="{% if class %}{{ class }} {% endif %}select2"
            {% if placeholder %}data-placeholder="{{ placeholder }}"{% endif %}
            {% if allowClear %}data-allow-clear="{{ allowClear }}"{% endif %}
            {% if noSearchBox %}data-minimum-results-for-search="-1"{% endif %}
            {% if width %}style="width: {{ width }}em;"{% endif %}>
        {% for key, name in values %}
            {% if key == -1 %}
                <option></option>
            {% else %}
                <option value="{{ key }}"{% if value == key %} selected="selected"{% endif %}>{{ name }}</option>
            {% endif %}
        {% endfor %}
    </select>
{% endmacro %}

{% macro select2ajax(name, class, placeholder, value, text) %}
    <select name="{{ name }}" class="{% if class %}{{ class }} {% endif %}" style="width: 100%"
            {% if placeholder %}data-placeholder="{{ placeholder }}"{% endif %}
        >

        <option value="{{ value }}" selected="selected">{{ text }}</option>
    </select>
{% endmacro %}

{% macro avatar(username, size, linked = false) %}
    {% set suffix = '_30_30' %}
    {% if size == 30 %}
        {% set suffix = '_30_30' %}
    {% elseif size == 50  %}
        {% set suffix = '_50_50' %}
    {% elseif size == 75  %}
        {% set suffix = '_75_75' %}
    {% elseif size == 150  %}
        {% set suffix = '_150' %}
    {% elseif size == 500  %}
        {% set suffix = '_500' %}
    {% elseif size == 200  %}
        {% set suffix = '_200' %}
    {% endif %}
    {% set img %}<img src="{{ path('avatar', { 'username': username , 'size': suffix }) }}" >{% endset %}
    {% if linked %}
        {{ macro.memberlink(username, img) }}
    {% else %}
        {{ img }}
    {% endif %}
{% endmacro %}

{% macro memberlink(username) %}
<a href="members/{{ username }}">{{ username }}</a>
{% endmacro %}

{% macro pagination(currentPage, lastPage, route, routeParams) %}
    {#
      Source: http://dev.dbl-a.com/symfony-2-0/symfony2-and-twig-pagination/
      Updated by: Simon Schick <simonsimcity@gmail.com>

      Parameters:
        * currentPage (int) : the current page you are in
        * lastPage (int) : represents the total number of existing pages
        * route (string) : the route name to use for links
    #}
    {% spaceless %}
        {% if lastPage > 1 %}

            {# the number of first and last pages to be displayed #}
            {% set extremePagesLimit = 3 %}

            {# the number of pages that are displayed around the active page #}
            {% set nearbyPagesLimit = 2 %}

            {# always show first and last link (disabled) #}
            {% set showAlwaysFirstAndLast = true %}

            <nav>
                <ul class="pagination">
                {% if currentPage > 1 %}
                    <li><a href="{{ path(route, routeParams|merge({currentPage: currentPage - 1})) }}" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>

                    {% for i in range(1, extremePagesLimit) if ( i < currentPage - nearbyPagesLimit ) %}
                        <li><a href="{{ path(route, routeParams|merge({page: i})) }}">{{ i }}</a></li>
                    {% endfor %}

                    {% if extremePagesLimit + 1 < currentPage - nearbyPagesLimit %}
                        <li class="disabled"><a href="#">...</a></li>
                    {% endif %}

                    {% for i in range(currentPage-nearbyPagesLimit, currentPage-1) if ( i > 0 ) %}
                        <li><a href="{{ path(route, routeParams|merge({currentPage: i})) }}">{{ i }}</a></li>
                    {% endfor %}
                {% elseif showAlwaysFirstAndLast %}
                    <li class="disabled"><a href="#" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>
                {% endif %}

                <li class="active"><a href="{{ path(route, routeParams|merge({ currentPage: currentPage })) }}">{{ currentPage }}</a></li>

                {% if currentPage < lastPage %}
                    {% for i in range(currentPage+1, currentPage + nearbyPagesLimit) if ( i <= lastPage ) %}
                        <li><a href="{{ path(route, routeParams|merge({currentPage: i})) }}">{{ i }}</a></li>
                    {% endfor %}

                    {% if  (lastPage - extremePagesLimit) > (currentPage + nearbyPagesLimit) %}
                        <li class="disabled"><a href="#">...</a></li>
                    {% endif %}

                    {% for i in range(lastPage - extremePagesLimit+1, lastPage) if ( i > currentPage + nearbyPagesLimit ) %}
                        <li><a href="{{ path(route, routeParams|merge({currentPage: i})) }}">{{ i }}</a></li>
                    {% endfor %}

                    <li><a href="{{ path(route, routeParams|merge({currentPage: currentPage+1})) }}" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>
                {% elseif showAlwaysFirstAndLast %}
                    <li class="disabled"><a href="#" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>
                {% endif %}
                </ul>
            </nav>
        {% endif %}
    {% endspaceless %}
{% endmacro %}

{% macro link( route, type ) %}
    {% set class = 'default' %}
    {% if type == 'dropdown'  %}
        {% set class = 'dropdown-item' %}
    {% endif %}
    <a class="{{ class }}" href="{{ path( route | lower ) }}">{{ route | trans }}</a>
{% endmacro %}